{
  "handlers": [
    {
      "name": "Morning Database Check",
      "type": "cron",
      "is_cron_handler": true,
      "cron_job_id": "morning_db_check",
      "cron_expression": "0 8 * * MON-FRI",
      "cron_timezone": "Europe/Istanbul",
      "cron_enabled": true,
      "actual_type": "database",
      "screen_id": "markdown2",
      "title": "Morning DB Health Check",
      "description": "Daily morning check of database connectivity and key parameters",
      "connectionString": "Server=localhost\\SQLEXPRESS;Database=NorthPole;Trusted_Connection=True;TrustServerCertificate=True;",
      "connector": "mssql",
      "query": "SELECT COUNT(*) as total_params, COUNT(CASE WHEN IsArray = 1 THEN 1 END) as array_params FROM [Strategy].[Parameter]",
      "actions": [
        {
          "name": "simple_print_key",
          "key": "_formatted_output"
        },
        {
          "name": "copytoclipboard",
          "key": "_self",
          "conditions": {
            "operator": "and",
            "conditions": [
              {
                "field": "total_params",
                "operator": "greater_than",
                "value": "0"
              }
            ]
          }
        }
      ],
      "seeder": {
        "check_time": "$func:now.format(HH:mm:ss)",
        "check_date": "$func:today.format(yyyy-MM-dd)",
        "operator": "$func:username"
      },
      "output_format": "üåÖ Morning Database Report $(check_date) at $(check_time)\n\nüìä **Statistics:**\n- Total Parameters: $(total_params)\n- Array Parameters: $(array_params)\n- Non-Array Parameters: $func:math.subtract($(total_params),$(array_params))\n\nüë§ **Operator:** $(operator)\n‚è∞ **Execution:** $(execution_time)\n\n‚úÖ Database connectivity confirmed"
    },
    {
      "name": "GitHub API Health Check",
      "type": "cron",
      "is_cron_handler": true,
      "cron_job_id": "github_health_check",
      "cron_expression": "*/30 * * * *",
      "cron_timezone": "UTC",
      "cron_enabled": true,
      "actual_type": "api",
      "screen_id": "jsonformatter",
      "title": "GitHub API Monitor",
      "description": "Every 30 minutes GitHub API health check",
      "url": "https://api.github.com/rate_limit",
      "method": "GET",
      "headers": {
        "Accept": "application/vnd.github.v3+json",
        "User-Agent": "Contextualizer-Monitor"
      },
      "actions": [
        {
          "name": "simple_print_key",
          "key": "RawResponse"
        },
        {
          "name": "copytoclipboard",
          "key": "_self",
          "conditions": {
            "operator": "and",
            "conditions": [
              {
                "field": "rate.remaining",
                "operator": "less_than",
                "value": "100"
              }
            ]
          }
        }
      ],
      "output_format": "API Health at $(execution_time):\nRemaining: $(rate.remaining)\nLimit: $(rate.limit)\nReset: $(rate.reset)"
    },
    {
      "name": "Weekly Corp Report",
      "type": "cron",
      "is_cron_handler": true,
      "cron_job_id": "weekly_corp_report",
      "cron_expression": "0 9 * * MON",
      "cron_timezone": "Europe/Istanbul",
      "cron_enabled": true,
      "actual_type": "lookup",
      "screen_id": "markdown2",
      "title": "Weekly Corp Report",
      "description": "Weekly corporate data summary",
      "path": "C:\\Finder\\corp_data.txt",
      "delimiter": "||",
      "key_names": ["drivercode"],
      "value_names": ["drivercode", "name", "engine"],
      "synthetic_input": {
        "key": "report_type",
        "title": "Report Type",
        "message": "Weekly Report Generated",
        "is_required": true,
        "default_value": "weekly_summary"
      },
      "actions": [
        {
          "name": "simple_print_key",
          "key": "_formatted_output"
        }
      ],
      "seeder": {
        "report_date": "$func:today",
        "week_start": "$func:today.subtract(days,7).format(yyyy-MM-dd)",
        "generated_at": "$func:now.format(yyyy-MM-dd HH:mm:ss)"
      },
      "output_format": "Weekly Report ($(week_start) - $(report_date)):\nGenerated: $(generated_at)\n\n$file:C:\\Finder\\output_template\\markdown_capabilities.txt"
    }
  ]
}
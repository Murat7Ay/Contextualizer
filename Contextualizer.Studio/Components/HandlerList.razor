@page "/handlers"
@using Contextualizer.Studio.Services
@inject IGitHubHandlerService GitHubService
@inject NavigationManager Navigation

<div class="container mx-auto p-4">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold">Handlers</h1>
        <button class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700" @onclick="CreateNewHandler">
            Create New Handler
        </button>
    </div>

    @if (_loading)
    {
        <div class="flex justify-center items-center h-64">
            <div class="animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900"></div>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            @if (_officialHandlers.Any())
            {
                <div class="col-span-full">
                    <h2 class="text-2xl font-bold mb-4">Official Handlers</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        @foreach (var handler in _officialHandlers)
                        {
                            <HandlerCard Handler="handler" OnClick="() => EditHandler(handler)" />
                        }
                    </div>
                </div>
            }

            @if (_communityHandlers.Any())
            {
                <div class="col-span-full mt-8">
                    <h2 class="text-2xl font-bold mb-4">Community Handlers</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        @foreach (var handler in _communityHandlers)
                        {
                            <HandlerCard Handler="handler" OnClick="() => EditHandler(handler)" />
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private bool _loading = true;
    private List<HandlerInfo> _officialHandlers = new();
    private List<HandlerInfo> _communityHandlers = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var officialTask = GitHubService.GetOfficialHandlersAsync();
            var communityTask = GitHubService.GetCommunityHandlersAsync();

            await Task.WhenAll(officialTask, communityTask);

            _officialHandlers = (await officialTask).ToList();
            _communityHandlers = (await communityTask).ToList();
        }
        catch (Exception ex)
        {
            // Handle error
        }
        finally
        {
            _loading = false;
        }
    }

    private void CreateNewHandler()
    {
        Navigation.NavigateTo("/handler-editor");
    }

    private void EditHandler(HandlerInfo handler)
    {
        Navigation.NavigateTo($"/handler-editor/{handler.Owner}/{handler.Name}");
    }
} 